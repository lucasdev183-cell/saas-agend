version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: agendamento_db
    environment:
      POSTGRES_DB: agendamento_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build: .
    container_name: agendamento_web
    environment:
      - DEBUG=False
      - USE_SQLITE=False
      - DB_NAME=agendamento_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - SECRET_KEY=your-secret-key-here
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0
    ports:
      - "8000:8000"
    volumes:
      - media_data:/app/media
      - static_data:/app/staticfiles
      - logs_data:/app/logs
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn --bind 0.0.0.0:8000 agendamento_sistema.wsgi:application"

  nginx:
    image: nginx:alpine
    container_name: agendamento_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - static_data:/var/www/static
      - media_data:/var/www/media
    depends_on:
      - web
    restart: unless-stopped

volumes:
  postgres_data:
  media_data:
  static_data:
  logs_data: