# Generated by Django 4.2 on 2025-08-26 10:33

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('tipo', models.CharField(choices=[('master', 'Master'), ('restrito', 'Restrito'), ('cliente', 'Cliente')], default='restrito', max_length=10)),
                ('telefone', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator('^\\+?1?\\d{9,15}$', 'Número de telefone inválido')])),
                ('cpf', models.CharField(blank=True, max_length=14, null=True, unique=True, validators=[django.core.validators.RegexValidator('^\\d{3}\\.\\d{3}\\.\\d{3}-\\d{2}$', 'CPF deve estar no formato 000.000.000-00')])),
                ('data_nascimento', models.DateField(blank=True, null=True)),
                ('endereco', models.TextField(blank=True, null=True)),
                ('foto_perfil', models.ImageField(blank=True, null=True, upload_to='perfis/')),
                ('ativo', models.BooleanField(default=True)),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('data_atualizacao', models.DateTimeField(auto_now=True)),
                ('pode_cadastrar_cliente', models.BooleanField(default=False)),
                ('pode_cadastrar_funcionario', models.BooleanField(default=False)),
                ('pode_cadastrar_cargo', models.BooleanField(default=False)),
                ('pode_agendar', models.BooleanField(default=False)),
                ('pode_ver_agendamentos', models.BooleanField(default=False)),
                ('pode_ver_relatorios', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
                'ordering': ['first_name', 'last_name'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Cargo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True)),
                ('descricao', models.TextField(blank=True, null=True)),
                ('salario_base', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('ativo', models.BooleanField(default=True)),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Cargo',
                'verbose_name_plural': 'Cargos',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='ConfiguracaoEmpresa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_empresa', models.CharField(default='Minha Empresa', max_length=200)),
                ('logotipo', models.ImageField(blank=True, null=True, upload_to='empresa/')),
                ('endereco', models.TextField(blank=True, null=True)),
                ('telefone', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('site', models.URLField(blank=True, null=True)),
                ('whatsapp_numero', models.CharField(blank=True, max_length=20, null=True)),
                ('whatsapp_token', models.CharField(blank=True, max_length=500, null=True)),
                ('whatsapp_ativo', models.BooleanField(default=False)),
                ('mensagem_boas_vindas', models.TextField(blank=True, default='Bem-vindo ao nosso sistema de agendamento!', null=True)),
                ('horario_funcionamento', models.TextField(blank=True, default='Segunda a Sexta: 08:00 - 18:00', null=True)),
                ('data_atualizacao', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Configuração da Empresa',
                'verbose_name_plural': 'Configurações da Empresa',
            },
        ),
        migrations.CreateModel(
            name='Servico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200)),
                ('descricao', models.TextField(blank=True, null=True)),
                ('preco', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('duracao_minutos', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(1440)])),
                ('ativo', models.BooleanField(default=True)),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Serviço',
                'verbose_name_plural': 'Serviços',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='LogAuditoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acao', models.CharField(choices=[('create', 'Criação'), ('update', 'Atualização'), ('delete', 'Exclusão'), ('login', 'Login'), ('logout', 'Logout'), ('view', 'Visualização')], max_length=10)),
                ('modelo', models.CharField(max_length=100)),
                ('objeto_id', models.PositiveIntegerField(blank=True, null=True)),
                ('objeto_repr', models.CharField(blank=True, max_length=200)),
                ('detalhes', models.JSONField(blank=True, default=dict)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('usuario', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Log de Auditoria',
                'verbose_name_plural': 'Logs de Auditoria',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Funcionario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_funcionario', models.CharField(max_length=20, unique=True)),
                ('data_contratacao', models.DateField()),
                ('data_demissao', models.DateField(blank=True, null=True)),
                ('salario', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('observacoes', models.TextField(blank=True, null=True)),
                ('ativo', models.BooleanField(default=True)),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('cargo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.cargo')),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Funcionário',
                'verbose_name_plural': 'Funcionários',
                'ordering': ['usuario__first_name', 'usuario__last_name'],
            },
        ),
        migrations.CreateModel(
            name='Agendamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_agendamento', models.DateTimeField()),
                ('status', models.CharField(choices=[('agendado', 'Agendado'), ('concluido', 'Concluído'), ('cancelado', 'Cancelado'), ('em_andamento', 'Em Andamento')], default='agendado', max_length=15)),
                ('observacoes', models.TextField(blank=True, null=True)),
                ('valor_final', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('data_atualizacao', models.DateTimeField(auto_now=True)),
                ('cliente', models.ForeignKey(limit_choices_to={'tipo': 'cliente'}, on_delete=django.db.models.deletion.CASCADE, related_name='agendamentos_cliente', to=settings.AUTH_USER_MODEL)),
                ('criado_por', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='agendamentos_criados', to=settings.AUTH_USER_MODEL)),
                ('funcionario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agendamentos_funcionario', to='core.funcionario')),
                ('servico', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.servico')),
            ],
            options={
                'verbose_name': 'Agendamento',
                'verbose_name_plural': 'Agendamentos',
                'ordering': ['-data_agendamento'],
            },
        ),
        migrations.AddIndex(
            model_name='logauditoria',
            index=models.Index(fields=['usuario', 'timestamp'], name='core_logaud_usuario_0123c3_idx'),
        ),
        migrations.AddIndex(
            model_name='logauditoria',
            index=models.Index(fields=['modelo', 'timestamp'], name='core_logaud_modelo_f6597c_idx'),
        ),
        migrations.AddIndex(
            model_name='logauditoria',
            index=models.Index(fields=['acao', 'timestamp'], name='core_logaud_acao_ce6ad0_idx'),
        ),
    ]
